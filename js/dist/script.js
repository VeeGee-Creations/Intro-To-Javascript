let pokemonRepository = function () { const e = [], t = []; let n = void 0; const o = "https://pokeapi.co/api/v2/pokemon/", i = "https://pokeapi.co/api/v2/pokemon/?offset=0&limit=20"; let c = "https://pokeapi.co/api/v2/pokemon/?offset=0&limit=20"; function r(t) { const n = Object.keys(t), o = ["name", "detailsUrl"], i = (r = o, (c = n).length === r.length && c.every(e => r.includes(e))); var c, r, a; if ("object" == typeof t) { if (!0 === i) { let n = t; return e.push(n) } for (let e = 0; e < n.length; e++)if (n[e] !== o[e]) console.error(n[e] + " is an incorrect property"); else for (let e = 0; e < o.length; e++) { !0 === (a = o[e], !n.includes(a)) && console.error(o[e] + " is missing from object") } } else console.error(typeof t + " is an incorrect type") } function a() { const t = document.getElementById("search-input").value.toLowerCase(); if ("" === t) { const t = document.querySelector("#pokelist"), n = document.querySelectorAll(".nav-item"); e.length = 0, t.innerHTML = "", t.removeAttribute("style", "columns: 1"), n.forEach(function (e) { e.parentNode.removeChild(e) }), pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }) }).then(function () { pokemonRepository.addHomeButton() }).then(function () { pokemonRepository.getMenu().forEach(function (e) { pokemonRepository.addMenuItem(e) }) }) } else { const e = { name: t, detailsUrl: o + t }; u(), fetch(e.detailsUrl).then(t => { if (t.ok) d(), pokemonRepository.loadSearch(e); else { d(); const e = document.querySelector("#pokelist"), t = document.createElement("li"); t.classList.add("search-error"), t.innerText = "Search did not return results.", e.innerHTML = "", e.setAttribute("style", "columns: 1"), e.appendChild(t) } }).catch(function (e) { d(), console.error(e) }) } } function s() { const e = document.querySelector("#nav-menu"), t = document.createElement("li"), n = document.createElement("button"), o = document.querySelector("#search-button"), i = document.querySelector("#search-input"); n.classList.add("nav-button"), n.innerText = "Home", n.classList.add("nav-button"), t.classList.add("nav-item"), t.appendChild(n), e.appendChild(t), n.addEventListener("click", l), o.addEventListener("click", a), i.addEventListener("search", a) } function l() { const e = document.querySelector("#pokelist"); document.querySelectorAll(".nav-item").forEach(function (e) { e.parentNode.removeChild(e) }), c = i, e.innerHTML = "", e.removeAttribute("style", "columns: 1"), pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }) }).then(function () { s() }).then(function () { pokemonRepository.getMenu().forEach(function (e) { pokemonRepository.addMenuItem(e) }) }) } function u() { const e = document.querySelector("main"), t = document.createElement("p"); t.classList.add("loading-message"), t.innerText = "Loading Pokemon", e.appendChild(t) } function d() { const e = document.getElementsByClassName("loading-message")[0]; e.parentNode.removeChild(e) } return { addPokemon: r, getAll: function () { return e }, getMenu: function () { return t }, addListItem: function (e) { const t = document.querySelector("#pokelist"), n = document.createElement("li"), o = document.createElement("button"); o.innerText = e.name.charAt(0).toUpperCase() + e.name.slice(1), o.classList.add("pokebutton"), o.setAttribute("data-toggle", "modal"), o.setAttribute("data-target", "#pokemonModal"), n.appendChild(o), t.appendChild(n), o.addEventListener("click", function () { !async function (e) { await pokemonRepository.loadDetails(e).then(function () { const t = e.name.charAt(0).toUpperCase() + e.name.slice(1), n = e.height / 10, o = e.weight / 10, i = [], c = [], r = e.imageUrl, a = r; e.types.forEach(function (e) { i.push(e.type.name.charAt(0).toUpperCase() + e.type.name.slice(1)) }), e.abilities.forEach(function (e) { c.push(e.ability.name.charAt(0).toUpperCase() + e.ability.name.slice(1)) }); const s = "Height: " + n + "\nWeight: " + o + "kg\nTypes: " + i.join(", ") + "\nAbilities: " + c.join(", "); !function (e, t, n) { const o = document.querySelector("#pokemonModalLabel"), i = document.querySelector(".modal-body"), c = document.createElement("img"), r = document.createElement("p"); o.innerText = "", o.innerText = e, o.setAttribute("tabindex", "0"), i.innerHTML = "", t && c.setAttribute("src", t), c.setAttribute("id", "pokemon-img"), c.setAttribute("alt", e + "-image"), r.innerText = n, r.setAttribute("tabindex", "0"), i.appendChild(c), i.appendChild(r) }(t, a, s) }) }(e) }) }, addHomeButton: s, addMenuItem: function (e) { [].push(e); const t = document.querySelector("#nav-menu"), o = document.createElement("li"), i = document.createElement("button"), r = document.querySelector(".nav-title"), a = r.childNodes[0], l = document.createElement("p"), u = c.match(/\d+/g).map(Number); u.shift(); const d = u[0] + u[1]; l.innerText = "Pokemon " + u[0] + " - " + d + " of " + n, l.classList.add("text-center"), l.setAttribute("tabindex", "0"), i.innerText = Object.keys(e)[0].charAt(0).toUpperCase() + Object.keys(e)[0].slice(1), o.classList.add("nav-item"), i.classList.add("nav-button"), o.appendChild(i), t.appendChild(o), r.replaceChild(l, a), i.addEventListener("click", function () { !function (e) { for (let t in e) if (e.hasOwnProperty(t)) { let n = e[t]; if (null === n) return; { const e = document.querySelector("#pokelist"), t = document.querySelectorAll(".nav-item"); t.forEach(function (e) { e.parentNode.removeChild(e) }), c = n, e.innerHTML = "", pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }) }).then(function () { s() }).then(function () { pokemonRepository.getMenu().forEach(function (e) { pokemonRepository.addMenuItem(e) }) }) } } }(e) }) }, loadSearch: function (t) { console.log(t); const n = document.querySelector("#pokelist"), o = document.querySelectorAll(".nav-item"), i = document.querySelector(".nav-title"), c = i.childNodes[0], a = document.createElement("p"), l = t.name; a.innerText = "Returned " + l.charAt(0).toUpperCase() + l.slice(1), a.classList.add("text-center"), e.length = 0, n.innerHTML = "", i.replaceChild(a, c), o.forEach(function (e) { e.parentNode.removeChild(e) }), n.setAttribute("style", "columns: 1"), s(), r(t), pokemonRepository.addListItem(e[0]) }, loadList: async function () { u(), function (o) { d(); const i = { next: o.next }, c = { previous: o.previous }; n = o.count, e.length = 0, t.length = 0, t.push(c, i), o.results.forEach(function (e) { const t = { name: e.name, detailsUrl: e.url }; r(t) }) }(await (await fetch(c).catch(function (e) { d(), console.error(e) })).json()) }, loadDetails: async function (e) { u(); const t = e.detailsUrl; return await fetch(t).then(function (e) { return e.json() }).then(function (t) { d(), e.imageUrl = t.sprites.other["official-artwork"].front_default, e.height = t.height, e.types = t.types, e.weight = t.weight, e.abilities = t.abilities }).catch(function (e) { d(), console.error(e) }) } } }(); pokemonRepository.loadList().then(function () { pokemonRepository.getAll().forEach(function (e) { pokemonRepository.addListItem(e) }) }).then(function () { pokemonRepository.addHomeButton() }).then(function () { pokemonRepository.getMenu().forEach(function (e) { pokemonRepository.addMenuItem(e) }) });